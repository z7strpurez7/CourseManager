# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'Plan'
  displayName: 'Plan'
  jobs:
  - job: 'Plan'
    displayName: 'Plan'
    timeoutInMinutes: 240
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTaskV4@4
      displayName: 'Init'
      inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(Build.SourcesDirectory)'
          backendServiceArm: 'InitialConnection'
          backendAzureRmResourceGroupName: 'skillflow-alitodashev-rg'
          backendAzureRmStorageAccountName: 'coursemanageraccount'
          backendAzureRmContainerName: 'terraformstate'
          backendAzureRmKey: 'states/terraform.tfstate'
    - task: TerraformTaskV4@4
      displayName: Terraform Plan
      inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(Build.SourcesDirectory)'
          environmentServiceNameAzureRM: 'InitialConnection'
      env:
          ARM_USE_AZUREAD: true


- stage: 'Deploy'
  displayName: 'Deploy'
  dependsOn: [Plan]
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy'
    timeoutInMinutes: 240
    steps:
    - task: TerraformTaskV4@4
      displayName: 'Init'
      inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(Build.SourcesDirectory)'
          backendServiceArm: 'InitialConnection'
          backendAzureRmResourceGroupName: 'skillflow-alitodashev-rg'
          backendAzureRmStorageAccountName: 'coursemanageraccount'
          backendAzureRmContainerName: 'terraformstate'
          backendAzureRmKey: 'states/terraform.tfstate'
    - task: TerraformTaskV4@4
      displayName: Terraform Apply
      inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(Build.SourcesDirectory)'
          environmentServiceNameAzureRM: 'InitialConnection'
      env:
          ARM_USE_AZUREAD: true
 
